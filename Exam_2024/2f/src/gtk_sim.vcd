$date
	Fri Jul 05 02:40:06 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Test_tb $end
$var wire 1 ! valid_ref $end
$var wire 1 " resend_count_ref $end
$var wire 1 # request_resend_ref $end
$var wire 1 $ error_ref $end
$var reg 1 % ack $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$var reg 1 ( signal $end
$scope module uart_retrans_ref_inst $end
$var wire 1 % ack $end
$var wire 1 & clk $end
$var wire 1 # request_resend $end
$var wire 1 ' reset $end
$var wire 1 ( signal $end
$var wire 1 ) valid_temp $end
$var wire 1 ! valid $end
$var wire 1 * trigger $end
$var wire 5 + resend_count [4:0] $end
$var wire 1 , request_resend_temp $end
$var wire 1 - error_temp $end
$var wire 1 $ error $end
$var parameter 5 . value $end
$scope module timer_inst $end
$var wire 1 & clk $end
$var wire 1 / complete $end
$var wire 5 0 count [4:0] $end
$var wire 1 1 enable $end
$var wire 1 ' reset $end
$var wire 5 2 value [4:0] $end
$var wire 1 , valid $end
$var wire 1 * trigger $end
$var wire 5 3 MUX3 [4:0] $end
$var wire 5 4 MUX2 [4:0] $end
$var wire 5 5 MUX1 [4:0] $end
$var reg 5 6 IN [4:0] $end
$scope module timer_fsm_inst $end
$var wire 1 & clk $end
$var wire 1 / complete $end
$var wire 1 1 enable $end
$var wire 1 ' reset $end
$var wire 1 * trigger $end
$var parameter 32 7 COUNT $end
$var parameter 32 8 DONE $end
$var parameter 32 9 IDLE $end
$var parameter 32 : PAUSE $end
$var reg 2 ; state [1:0] $end
$var reg 2 < state_next [1:0] $end
$upscope $end
$upscope $end
$scope module uart_parity_even_inst $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var wire 1 ( signal $end
$var wire 1 ) valid $end
$var wire 1 - error $end
$var parameter 32 = BIT1_EVEN $end
$var parameter 32 > BIT1_ODD $end
$var parameter 32 ? BIT2_EVEN $end
$var parameter 32 @ BIT2_ODD $end
$var parameter 32 A BIT3_EVEN $end
$var parameter 32 B BIT3_ODD $end
$var parameter 32 C BIT4_EVEN $end
$var parameter 32 D BIT4_ODD $end
$var parameter 32 E BREAK $end
$var parameter 32 F IDLE $end
$var parameter 32 G PAR_EVEN $end
$var parameter 32 H PAR_ODD $end
$var parameter 32 I START $end
$var parameter 32 J STP_EVEN $end
$var parameter 32 K STP_ODD $end
$var reg 4 L state [3:0] $end
$var reg 4 M state_next [3:0] $end
$upscope $end
$scope module uart_retrans_fsm_ref_inst $end
$var wire 1 % ack $end
$var wire 1 & clk $end
$var wire 1 ) frame_valid $end
$var wire 1 - parity_error $end
$var wire 1 ' reset $end
$var wire 1 * timeout $end
$var wire 1 ! valid $end
$var wire 1 , request_resend $end
$var wire 1 $ error $end
$var parameter 32 N ERROR $end
$var parameter 32 O RELEASE $end
$var parameter 32 P WAIT $end
$var parameter 32 Q WAIT_R1 $end
$var parameter 32 R WAIT_R2 $end
$var reg 1 S error_next $end
$var reg 1 T request_resend_next $end
$var reg 3 U state [2:0] $end
$var reg 3 V state_next [2:0] $end
$var reg 1 W valid_next $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 R
b1 Q
b0 P
b11 O
b100 N
b1110 K
b1101 J
b10 I
b1100 H
b1011 G
b1 F
b0 E
b1010 D
b1001 C
b1000 B
b111 A
b110 @
b101 ?
b100 >
b11 =
b11 :
b0 9
b10 8
b1 7
b1000 .
$end
#0
$dumpvars
0W
b0 V
b0 U
0T
0S
b0 M
b0 L
b0 <
b0 ;
b0 6
b0 5
b0 4
b0 3
b1000 2
11
b0 0
1/
0-
0,
b0 +
0*
0)
0(
1'
1&
0%
0$
0#
0"
0!
$end
#10
0&
#20
1&
#30
0&
#40
b1 L
b1 M
1&
1(
0'
#50
0&
#60
b10 L
b11 M
1&
0(
#70
0&
#80
b101 M
b11 L
1&
#90
0&
#100
b110 L
b111 M
1&
1(
#110
0&
#120
b1000 L
b1010 M
1&
0(
#130
0&
#140
b1100 M
b1010 L
1&
#150
0&
#160
b0 M
b1100 L
1&
#170
0&
#180
b1000 3
b1000 4
1#
1,
1T
b1 U
1-
b1110 L
b1 M
1&
1(
#190
0&
#200
b1 <
0/
b111 5
b0 U
0-
b1 L
b1000 +
b1000 0
b1000 6
1&
#210
0&
#220
b1 ;
1&
#230
0&
#240
1&
#250
0&
#260
1&
#270
0&
#280
1&
#290
0&
#300
1&
#310
0&
#320
1&
#330
0&
#340
1&
#350
0&
#360
1&
#370
0&
#380
1&
#390
0&
#400
1&
#410
0&
#420
1&
#430
0&
#440
1&
#450
0&
#460
1/
b0 5
b0 +
b0 0
b0 6
b0 L
b0 <
b0 4
b0 ;
b0 3
0#
0,
b0 M
1&
1'
0(
#470
0&
#480
1&
#490
0&
#500
b1000 3
b1000 4
1#
1,
1&
0'
#510
0&
#520
b1 <
0/
b111 5
b1 L
b1000 +
b1000 0
b1000 6
b1 M
1&
1(
#530
0&
#540
b10 L
b1 ;
b11 M
1&
0(
#550
0&
#560
b101 M
b11 L
1&
#570
0&
#580
b110 L
b111 M
1&
1(
#590
0&
#600
b1000 L
b1010 M
1&
0(
#610
0&
#620
b1100 M
b1010 L
1&
#630
0&
#640
b0 M
b1100 L
1&
#650
0&
#660
b1 U
1-
b1110 L
b1 M
1&
1(
#670
0&
#680
b0 U
0-
b1 L
1&
#690
0&
#700
1&
#710
0&
#720
1&
#730
0&
#740
1&
#750
0&
#760
1&
#770
0&
#780
1&
#790
0&
#800
1&
#810
0&
#820
1&
#830
0&
#840
1&
#850
0&
#860
1&
#870
0&
#880
1&
#890
0&
#900
1&
#910
0&
#920
1&
#930
0&
#940
1/
b0 5
b0 +
b0 0
b0 6
b0 L
b0 <
b0 4
b0 ;
b0 3
0#
0,
b0 M
1&
1'
0(
#950
0&
#960
1&
#970
0&
#980
b1000 3
b1000 4
1#
1,
1&
0'
#990
0&
#1000
b1 <
0/
b111 5
b1 L
b1000 +
b1000 0
b1000 6
b1 M
1&
1(
#1010
0&
#1020
b10 L
b1 ;
b11 M
1&
0(
#1030
0&
#1040
b101 M
b11 L
1&
#1050
0&
#1060
b110 L
b111 M
1&
1(
#1070
0&
#1080
b1000 L
b1010 M
1&
0(
#1090
0&
#1100
b1100 M
b1010 L
1&
#1110
0&
#1120
b0 M
b1100 L
1&
#1130
0&
#1140
b1 U
1-
b1110 L
b1 M
1&
1(
#1150
0&
#1160
b0 U
0-
b1 L
1&
#1170
0&
#1180
1&
#1190
0&
#1200
1&
#1210
0&
#1220
1/
b0 5
b0 +
b0 0
b0 6
b0 L
b0 <
b0 4
b0 ;
b0 3
0#
0,
b0 M
1&
1'
0(
#1230
0&
#1240
1&
#1250
0&
#1260
b1000 3
b1000 4
1#
1,
1&
0'
#1270
0&
#1280
b1 <
0/
b111 5
b1000 +
b1000 0
b1000 6
1&
#1290
0&
#1300
b1 ;
1&
#1310
0&
#1320
1&
#1330
0&
#1340
1&
